---
interface Props {
  config?: {
    logo?: {
      light: string;
      dark?: string;
      alt: string;
      width?: number;
      height?: number;
    };
  };
  siteName: string;
  tagline?: string;
  class?: string;
}

const { config, siteName, tagline, class: className = '' } = Astro.props;
const hasLogo = config?.logo;
const logoConfig = config?.logo;
---

<a href="/" class={`flex items-center ${className}`}>
  {hasLogo ? (
    <div class="flex items-center">
      <!-- Light mode logo -->
      <img
        src={logoConfig.light}
        alt={logoConfig.alt}
        width={logoConfig.width || 180}
        height={logoConfig.height || 40}
        class="h-8 w-auto dark:hidden"
        loading="eager"
      />
      
      <!-- Dark mode logo (if different) -->
      {logoConfig.dark ? (
        <img
          src={logoConfig.dark}
          alt={logoConfig.alt}
          width={logoConfig.width || 180}
          height={logoConfig.height || 40}
          class="h-8 w-auto hidden dark:block"
          loading="eager"
        />
      ) : (
        <img
          src={logoConfig.light}
          alt={logoConfig.alt}
          width={logoConfig.width || 180}
          height={logoConfig.height || 40}
          class="h-8 w-auto hidden dark:block"
          loading="eager"
        />
      )}
      
      {tagline && (
        <div class="ml-3 flex flex-col">
          <span class="text-lg font-bold text-gray-900 dark:text-white leading-none">
            {siteName}
          </span>
          <span class="text-xs text-gray-500 dark:text-gray-400 leading-none">
            {tagline}
          </span>
        </div>
      )}
    </div>
  ) : (
    <!-- Text-only logo -->
    <div class="flex flex-col">
      <span class="text-xl font-bold text-primary-600 dark:text-primary-400">
        {siteName}
      </span>
      {tagline && (
        <span class="text-xs text-gray-500 dark:text-gray-400 -mt-1">
          {tagline}
        </span>
      )}
    </div>
  )}
</a> 