---
import { getCollection, type CollectionEntry } from 'astro:content';
import type { Page } from 'astro';
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import PageNavigation from '../../../../components/features/PageNavigation.astro';
import PostCard from '../../../../components/ui/PostCard.astro';
import { SEO } from 'astro-seo';
import { BLOG_CONFIG } from '../../../../config/current-config';

export async function getStaticPaths({ paginate }) {
  // Get all blog posts
  const allPosts: CollectionEntry<'posts'>[] = await getCollection('posts');
  
  // Get all unique categories
  const uniqueCategories = [...new Set(allPosts.map((post: CollectionEntry<'posts'>) => post.data.category))];
  
  // For each category, generate paginated pages
  return uniqueCategories.flatMap(category => {
    // Filter posts for this category
    const filteredPosts = allPosts.filter((post: CollectionEntry<'posts'>) => post.data.category === category);
    
    // Sort by date (newest first)
    const sortedPosts = filteredPosts.sort((a: CollectionEntry<'posts'>, b: CollectionEntry<'posts'>) => b.data.date.valueOf() - a.data.date.valueOf());
    
    // Generate pages with pagination (9 posts per page)
    return paginate(sortedPosts, {
      params: { category },
      pageSize: 9
    });
  });
}

const { page } = Astro.props as { page: Page<CollectionEntry<'posts'>> };
const { category } = Astro.params;

// Format category name for display (capitalize, replace hyphens with spaces)
const formattedCategory = category
  .split('-')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const ogImageUrl = `https://placehold.co/1200x630?text=${encodeURIComponent(BLOG_CONFIG.site.name)}+${encodeURIComponent(formattedCategory)}`;

const seoOpenGraph = {
  basic: {
    title: `${formattedCategory} - ${BLOG_CONFIG.site.name}`,
    type: "website",
    image: ogImageUrl,
  },
};


---

<BaseLayout>
  <SEO
    slot="seo"
    title={`${formattedCategory} - Page ${page.currentPage} | ${BLOG_CONFIG.site.name}`}
    description={`Browse all ${formattedCategory} articles - Page ${page.currentPage} of our investment and stock market blog`}
    canonical={canonicalURL}
    openGraph={seoOpenGraph}
  />

  <div class="py-12">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">
        {formattedCategory}
      </h1>
      
      <p class="text-gray-600 dark:text-gray-400 mb-8">
        All articles related to {formattedCategory.toLowerCase()}
      </p>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {page.data.map((post) => (
          <PostCard post={post} lazyLoadImage={true} />
        ))}
      </div>
      
      <!-- Pagination Controls -->
      <PageNavigation page={page} />
    </div>
  </div>
</BaseLayout>
