---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SEO } from 'astro-seo';
import { BLOG_CONFIG } from '../../config/current-config';

// Initialize empty categories
let categories = [];

try {
  // Get all categories and count posts in each
  const allPosts = await getCollection('posts');
  
  if (allPosts && allPosts.length > 0) {
    const categoryCounts = allPosts.reduce((acc, post) => {
      const category = post.data.category;
      acc[category] = (acc[category] || 0) + 1;
      return acc;
    }, {});

    // Format categories for display
    categories = Object.entries(categoryCounts).map(([category, count]) => ({
      slug: category,
      name: category
        .split('-')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' '),
      count
    })).sort((a, b) => b.count - a.count);
  }
} catch (error) {
  console.error('Error fetching categories:', error);
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<BaseLayout>
  <SEO
    slot="seo"
    title={`Categories | ${BLOG_CONFIG.site.name}`}
    description={`Browse all article categories on ${BLOG_CONFIG.site.name}, exploring various topics and themes.`}
    canonical={canonicalURL}
    openGraph={{
      basic: {
        title: `Categories | ${BLOG_CONFIG.site.name}`,
        type: 'website',
        image: BLOG_CONFIG.branding.ogImage,
      }
    }}
  />

  <div class="py-12">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-8">
        Browse by Category
      </h1>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {categories.map(category => (
          <a href={`/categories/${category.slug}/page/1`} class="block">
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow p-6">
              <h2 class="text-xl font-bold text-gray-900 dark:text-white mb-2">{category.name}</h2>
              <p class="text-primary-600 dark:text-primary-400">
                {category.count} {category.count === 1 ? 'Article' : 'Articles'}
              </p>
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>
</BaseLayout>
